---
title: "Operações básicas e variáveis"
author: "Vitor Hugo Miro"
---

## Realizando cálculos básicos

Em sua forma mais básica, `R` pode ser usado como uma calculadora. Operações básicas são executadas de forma muito simples e direta.

-   Adição, subtração, multiplicação e divisão.

| Operação   | `R`     | Resultado |
|------------|---------|-----------|
| $3 + 2$    | `3 + 2` | `r 3 + 2` |
| $3 - 2$    | `3 - 2` | `r 3 - 2` |
| $3 \cdot2$ | `3 * 2` | `r 3 * 2` |
| $3 / 2$    | `3 / 2` | `r 3 / 2` |

-   Potenciação

| Operação     | `R`             | Resultado         |
|--------------|-----------------|-------------------|
| $3^2$        | `3 ^ 2`         | `r 3 ^ 2`         |
| $2^{(-3)}$   | `2 ^ (-3)`      | `r 2 ^ (-3)`      |
| $100^{1/2}$  | `100 ^ (1 / 2)` | `r 100 ^ (1 / 2)` |
| $\sqrt{100}$ | `sqrt(100)`     | `r sqrt(100)`     |

-   Logaritmos

| Operação          | `R`                 | Resultado             |
|-------------------|---------------------|-----------------------|
| $\log(e)$         | `log(exp(1))`       | `r log(exp(1))`       |
| $\log_{10}(1000)$ | `log10(1000)`       | `r log10(1000)`       |
| $\log_{2}(8)$     | `log2(8)`           | `r log2(8)`           |
| $\log_{4}(16)$    | `log(16, base = 4)` | `r log(16, base = 4)` |

Usamos $\ln$ e $\log$ de forma intercambiável para representar o logaritmo natural. No `R` não há `ln()`, em vez disso, ele usa `log()` para o logaritmo natural.

-   Algumas constantes importantes

| Operação | `R`      | Resultado  |
|----------|----------|------------|
| $\pi$    | `pi`     | `r pi`     |
| $e$      | `exp(1)` | `r exp(1)` |

-   Trigonometria

Para aplicar funções trigonométricas no `R` precisamos converter graus para radianos.

| Operação        | `R`           | Resultado       |
|-----------------|---------------|-----------------|
| $\sin(\pi / 2)$ | `sin(pi / 2)` | `r sin(pi / 2)` |
| $\cos(0)$       | `cos(0)`      | `r cos(0)`      |
| $\tan(\pi / 4)$ | `tan(pi / 4)` | `r tan(pi / 4)` |

Note que o `R`possui várias funções nativas como `sqrt()`, `exp()`, `log()` and `sin()`. Para consultar a documentação sobre uma função no `R`, basta colocar um ponto de interrogação (?) seguido pelo nome da função e o RStudio exibirá a documentação. Por exemplo:

```{r, eval = FALSE}
?sqrt
```

## Atribuição de variáveis

Um conceito básico em programação é chamado de variável. Um conceito um pouco diferente da forma como lidamos em matemática e estatística.

Na programação, uma variável nos fornece um "espaço" de armazenamento nomeado.

Ou seja, uma variável nos permite armazenar informações ou dados (um valor ou um objeto), e acessar o conteúdo ao invocar o nome dado a variável.

Vejamos um exemplo.

```{r}
# Atribuir o valor 25 para x
x <- 25

# Imprimir o valor da variável x
print(x)
```

Podemos realizar operações com as variáveis.

```{r}
# Atribuir valor para y
y <- 5

# Imprimir o valor da soma x + y
x + y
```

A função `cat()` combina vários itens em uma saída de impressão contínua.

```{r}
cat("x + y é igual a ", x+y)
```

## Tipos de dados

`R` lida com vários tipos básicos de dados. Alguns dos tipos mais básicos são:

-   Valores numéricos (`numeric`)
    -   Exemplos: `1`, `1.0`, `42.5`
-   Números inteiros (`integer`)
    -   Exemplos: `1L`, `2L`, `42L`
-   Números complexos
    -   Exemplo: `4 + 2i`
-   Valores lógicos (`logical`): `TRUE` ou `FALSE`.
    -   Apesar de não ser recomendado, podemos usar `T` e `F`.
    -   `NA` (valores ausentes) também são considerados lógicos.
-   Texto / *strings* (`character`)
    -   Exemplos: `"a"`, `"Estatística"`, `"Análise de Dados"`

Podemos verificar o tipo de informação no `R` usando a função `class ()`

```{r}
# Exemplo
x <- 10
class(x)
```

```{r}
# Exemplo
y <- "texto"
class(y)
```

